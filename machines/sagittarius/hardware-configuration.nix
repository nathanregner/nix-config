# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "ahci" "xhci_pci" "ehci_pci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/bed76273-18ca-45c6-9008-93a5332f7608";
    fsType = "btrfs";
    options = [ "subvol=@" "noatime" ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/bed76273-18ca-45c6-9008-93a5332f7608";
    fsType = "btrfs";
    options = [ "subvol=@home" "noatime" ];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/bed76273-18ca-45c6-9008-93a5332f7608";
    fsType = "btrfs";
    options = [ "subvol=@var-lib" "noatime" ];
  };

  fileSystems."/var/lib" = {
    device = "/dev/disk/by-uuid/bed76273-18ca-45c6-9008-93a5332f7608";
    fsType = "btrfs";
    options = [ "subvol=@var-log" "noatime" ];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/bed76273-18ca-45c6-9008-93a5332f7608";
    fsType = "btrfs";
    options = [ "subvol=@nix" "noatime" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A652-29E4";
    fsType = "vfat";
  };

  fileSystems."/vol/data" = {
    device = "/dev/disk/by-uuid/394db84b-1663-4d06-9cfa-794c3162bd93";
    fsType = "ext4";
  };

  fileSystems."/vol/backup" = {
    device = "/dev/disk/by-uuid/dfe2646a-e49d-4d93-a118-7b1f1085db08";
    fsType = "btrfs";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
